{"cells":[{"metadata":{"id":"NgUeapcvmIRh"},"cell_type":"markdown","source":"# **Assignment For Numpy**"},{"metadata":{"id":"yhr3JicwnA-4"},"cell_type":"markdown","source":"Difficulty Level **Beginner**"},{"metadata":{"id":"hVPqDJ1SnKSh"},"cell_type":"markdown","source":"1. Import the numpy package under the name np"},{"metadata":{"id":"SePu31zKmgS-","trusted":true},"cell_type":"code","source":"import numpy as np ","execution_count":1,"outputs":[]},{"metadata":{"id":"d0gO81krnL7g"},"cell_type":"markdown","source":"2. Create a null vector of size 10 "},{"metadata":{"id":"2s6o2JPgnSBr","trusted":true},"cell_type":"code","source":"x = np.zeros(10)","execution_count":2,"outputs":[]},{"metadata":{"id":"BJTMK03fnS1w"},"cell_type":"markdown","source":"3. Create a vector with values ranging from 10 to 49"},{"metadata":{"id":"qRXxXuWdnj1M","trusted":true},"cell_type":"code","source":"y = np.arange(10,49)","execution_count":5,"outputs":[]},{"metadata":{"id":"n63lzg5Onkcn"},"cell_type":"markdown","source":"4. Find the shape of previous array in question 3"},{"metadata":{"id":"1FueBdqPn_q7","trusted":true},"cell_type":"code","source":"np.shape(y)","execution_count":6,"outputs":[{"output_type":"execute_result","execution_count":6,"data":{"text/plain":"(39,)"},"metadata":{}}]},{"metadata":{"id":"AzMlQj1MoAVe"},"cell_type":"markdown","source":"5. Print the type of the previous array in question 3"},{"metadata":{"id":"AO9PYmdWoE1L","trusted":true},"cell_type":"code","source":"type(y)","execution_count":9,"outputs":[{"output_type":"execute_result","execution_count":9,"data":{"text/plain":"numpy.ndarray"},"metadata":{}}]},{"metadata":{"id":"0qaKS13Yon-U"},"cell_type":"markdown","source":"6. Print the numpy version and the configuration\n"},{"metadata":{"id":"T3wY24e1oorh","trusted":true},"cell_type":"code","source":"y","execution_count":10,"outputs":[{"output_type":"execute_result","execution_count":10,"data":{"text/plain":"array([10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,\n       27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,\n       44, 45, 46, 47, 48])"},"metadata":{}}]},{"metadata":{"id":"ZyUUiQf5oyvE"},"cell_type":"markdown","source":"7. Print the dimension of the array in question 3\n"},{"metadata":{"id":"pLXfuIqIo0vq","trusted":true},"cell_type":"code","source":"y.ndim","execution_count":14,"outputs":[{"output_type":"execute_result","execution_count":14,"data":{"text/plain":"1"},"metadata":{}}]},{"metadata":{"id":"JYVMuFrqpBdV"},"cell_type":"markdown","source":"8. Create a boolean array with all the True values"},{"metadata":{"id":"3apZsISzpFKR","trusted":true},"cell_type":"code","source":"z=np.ones((2, 2), dtype=bool)","execution_count":17,"outputs":[]},{"metadata":{"id":"4zbBooWZpPBU"},"cell_type":"markdown","source":"9. Create a two dimensional array\n\n\n"},{"metadata":{"id":"KfPQEiVIpdTo","trusted":true},"cell_type":"code","source":"a = np.array([[1, 2, 3], [4, 5, 6]])","execution_count":19,"outputs":[]},{"metadata":{"id":"do9wPAFbpqC7"},"cell_type":"markdown","source":"10. Create a three dimensional array\n\n"},{"metadata":{"id":"ZCO_q-KZqAeW","trusted":true},"cell_type":"code","source":"a = np.array([[1, 2, 3], [4, 5, 6],[4, 5, 6]])","execution_count":21,"outputs":[]},{"metadata":{"id":"a4iysJ87qEeb"},"cell_type":"markdown","source":"Difficulty Level **Easy**"},{"metadata":{"id":"DehgqszSqjY6"},"cell_type":"markdown","source":"11. Reverse a vector (first element becomes last)"},{"metadata":{"id":"tfevmc4VqkWu","trusted":true},"cell_type":"code","source":"x=np.array([1,2,3])\nprint(x)\ny = x[::-1]\ny","execution_count":27,"outputs":[{"output_type":"stream","text":"[1 2 3]\n","name":"stdout"},{"output_type":"execute_result","execution_count":27,"data":{"text/plain":"array([3, 2, 1])"},"metadata":{}}]},{"metadata":{"id":"yoATXS-qqk_q"},"cell_type":"markdown","source":"12. Create a null vector of size 10 but the fifth value which is 1 "},{"metadata":{"id":"AheZ32Owqpte","trusted":true},"cell_type":"code","source":"b=np.array([int(x==4) for x in range(10)])\nb","execution_count":29,"outputs":[{"output_type":"execute_result","execution_count":29,"data":{"text/plain":"array([0, 0, 0, 0, 1, 0, 0, 0, 0, 0])"},"metadata":{}}]},{"metadata":{"id":"RZRzOBbFsY0w"},"cell_type":"markdown","source":"13. Create a 3x3 identity matrix"},{"metadata":{"id":"va2ou0BHsvEj","trusted":true},"cell_type":"code","source":"D=np.identity(3)\nD","execution_count":31,"outputs":[{"output_type":"execute_result","execution_count":31,"data":{"text/plain":"array([[1., 0., 0.],\n       [0., 1., 0.],\n       [0., 0., 1.]])"},"metadata":{}}]},{"metadata":{"id":"lnN5drkUs6o2"},"cell_type":"markdown","source":"14. arr = np.array([1, 2, 3, 4, 5]) \n\n---\n\n Convert the data type of the given array from int to float "},{"metadata":{"id":"59EIQt6otKUB","trusted":true},"cell_type":"code","source":"arr = np.array([1, 2, 3, 4, 5])\narr.astype('f')","execution_count":37,"outputs":[{"output_type":"execute_result","execution_count":37,"data":{"text/plain":"array([1., 2., 3., 4., 5.], dtype=float32)"},"metadata":{}}]},{"metadata":{"id":"fSL2AKJetTes"},"cell_type":"markdown","source":"15. arr1 =          np.array([[1., 2., 3.],\n\n                    [4., 5., 6.]])  \n                      \n    arr2 = np.array([[0., 4., 1.],\n     \n                   [7., 2., 12.]])\n\n---\n\n\nMultiply arr1 with arr2\n"},{"metadata":{"id":"7VDXgRQDuJNV","trusted":true},"cell_type":"code","source":"arr1 = np.array([[1., 2., 3.],[4., 5., 6.]])  \narr2 = np.array([[0., 4., 1.],[7., 2., 12.]])\nnp.multiply(arr1,arr2)","execution_count":40,"outputs":[{"output_type":"execute_result","execution_count":40,"data":{"text/plain":"array([[ 0.,  8.,  3.],\n       [28., 10., 72.]])"},"metadata":{}}]},{"metadata":{"id":"a8yJ438-uKni"},"cell_type":"markdown","source":"16. arr1 = np.array([[1., 2., 3.],\n                    [4., 5., 6.]]) \n                    \n    arr2 = np.array([[0., 4., 1.], \n                    [7., 2., 12.]])\n\n\n---\n\nMake an array by comparing both the arrays provided above"},{"metadata":{"id":"3MPDaAlYueF3","trusted":true},"cell_type":"code","source":"aj=np.intersect1d(arr1, arr2)\naj","execution_count":43,"outputs":[{"output_type":"execute_result","execution_count":43,"data":{"text/plain":"array([1., 2., 4.])"},"metadata":{}}]},{"metadata":{"id":"3xiD0eJluewk"},"cell_type":"markdown","source":"17. Extract all odd numbers from arr with values(0-9)"},{"metadata":{"id":"J_qbt_EuvM7l","trusted":true},"cell_type":"code","source":"od=arr[arr % 2 == 1]","execution_count":48,"outputs":[]},{"metadata":{"id":"zpg5cyLsvPoZ"},"cell_type":"markdown","source":"18. Replace all odd numbers to -1 from previous array"},{"metadata":{"id":"rXUV1-ULvQdd","trusted":true},"cell_type":"code","source":"arr[arr%2 == 1] = -1 \narr","execution_count":51,"outputs":[{"output_type":"execute_result","execution_count":51,"data":{"text/plain":"array([-1,  2, -1,  4, -1])"},"metadata":{}}]},{"metadata":{"id":"FWpHTWTDvjvi"},"cell_type":"markdown","source":"19. arr = np.arange(10)\n\n\n---\n\nReplace the values of indexes 5,6,7 and 8 to **12**"},{"metadata":{"id":"ensZ3lqwvlSb","trusted":true},"cell_type":"code","source":"arr = np.arange(10)\nnp.put(arr, [5, 6,7,8], [12])\narr","execution_count":54,"outputs":[{"output_type":"execute_result","execution_count":54,"data":{"text/plain":"array([ 0,  1,  2,  3,  4, 12, 12, 12, 12,  9])"},"metadata":{}}]},{"metadata":{"id":"ib-vBffAv0zy"},"cell_type":"markdown","source":"20. Create a 2d array with 1 on the border and 0 inside"},{"metadata":{"id":"RmzcjNYrwDrM","trusted":true},"cell_type":"code","source":"x = np.ones((8,8))\nx[1:-1,1:-1] = 0\nx","execution_count":57,"outputs":[{"output_type":"execute_result","execution_count":57,"data":{"text/plain":"array([[1., 1., 1., 1., 1., 1., 1., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 0., 0., 0., 0., 0., 0., 1.],\n       [1., 1., 1., 1., 1., 1., 1., 1.]])"},"metadata":{}}]},{"metadata":{"id":"E1diIFSEwEmh"},"cell_type":"markdown","source":"Difficulty Level **Medium**"},{"metadata":{"id":"eGLZmNb_wKb4"},"cell_type":"markdown","source":"21. arr2d = np.array([[1, 2, 3],\n\n                    [4, 5, 6], \n\n                    [7, 8, 9]])\n\n---\n\nReplace the value 5 to 12"},{"metadata":{"id":"VdUnsUOZwJFz","trusted":true},"cell_type":"code","source":"arr2d = np.array([[1, 2, 3],\n\n            [4, 5, 6], \n\n            [7, 8, 9]])\nnp.put(arr2d, [4], [12])\narr2d","execution_count":62,"outputs":[{"output_type":"execute_result","execution_count":62,"data":{"text/plain":"array([[ 1,  2,  3],\n       [ 4, 12,  6],\n       [ 7,  8,  9]])"},"metadata":{}}]},{"metadata":{"id":"TEbFhlPZxaKO"},"cell_type":"markdown","source":"22. arr3d = np.array([[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]])\n\n---\nConvert all the values of 1st array to 64\n"},{"metadata":{"id":"eYzephU8xmsg","trusted":true},"cell_type":"code","source":"arr3d = np.array([[[1, 2, 3], [4, 5, 6]], [[7, 8, 9], [10, 11, 12]]])\nprint(arr3d)\narr3d[0]=64\narr3d","execution_count":75,"outputs":[{"output_type":"stream","text":"[[[ 1  2  3]\n  [ 4  5  6]]\n\n [[ 7  8  9]\n  [10 11 12]]]\n","name":"stdout"},{"output_type":"execute_result","execution_count":75,"data":{"text/plain":"array([[[64, 64, 64],\n        [64, 64, 64]],\n\n       [[ 7,  8,  9],\n        [10, 11, 12]]])"},"metadata":{}}]},{"metadata":{"id":"vZj0Ndvnx6f0"},"cell_type":"markdown","source":"23. Make a 2-Dimensional array with values 0-9 and slice out the first 1st 1-D array from it"},{"metadata":{"id":"pM4e9YfdyHSv","trusted":true},"cell_type":"code","source":"arr2d =np.arange(0,9).reshape(3,3)\narr2d[0]\n","execution_count":83,"outputs":[{"output_type":"execute_result","execution_count":83,"data":{"text/plain":"array([0, 1, 2])"},"metadata":{}}]},{"metadata":{"id":"C3dkW0lZyVps"},"cell_type":"markdown","source":"24. Make a 2-Dimensional array with values 0-9 and slice out the 2nd value from 2nd 1-D array from it"},{"metadata":{"id":"IrrzK2xgygqV","trusted":true},"cell_type":"code","source":"arr2d =np.arange(0,9).reshape(3,3)\narr2d[1,1]","execution_count":87,"outputs":[{"output_type":"execute_result","execution_count":87,"data":{"text/plain":"4"},"metadata":{}}]},{"metadata":{"id":"G3dLwOO9yyrE"},"cell_type":"markdown","source":"25. Make a 2-Dimensional array with values 0-9 and slice out the third column but only the first two rows"},{"metadata":{"id":"5Bx4fqsLyqGD","trusted":true},"cell_type":"code","source":"arr2d =np.arange(0,9).reshape(3,3)\nprint(arr2d[0,2])\nprint(arr2d[1,2])","execution_count":102,"outputs":[{"output_type":"stream","text":"2\n5\n","name":"stdout"}]},{"metadata":{"id":"CQ9YST5jy0IL"},"cell_type":"markdown","source":"26. Create a 10x10 array with random values and find the minimum and maximum values"},{"metadata":{"id":"lhJPugjQzG6W","trusted":true},"cell_type":"code","source":"x = np.random.random((10,10))\nprint(x) \nxmin, xmax = x.min(), x.max()\nprint(\"Minimum and Maximum Values:\")\nprint(xmin, xmax)","execution_count":103,"outputs":[{"output_type":"stream","text":"[[4.87236101e-01 9.13283625e-01 6.73578518e-01 5.38369783e-01\n  9.49847880e-01 8.68176864e-01 6.76241030e-01 9.02596987e-02\n  2.93383196e-01 1.03921747e-01]\n [6.13054918e-02 8.23385002e-01 1.82453951e-02 5.08834072e-01\n  1.77125913e-01 6.27685227e-01 5.14777241e-01 6.28378190e-01\n  6.39471049e-01 4.90441847e-01]\n [7.76454690e-01 7.72719737e-01 3.41011898e-01 7.65110169e-01\n  5.32783835e-01 2.74633997e-01 5.20743775e-01 3.07674172e-01\n  5.36283450e-01 8.60988739e-01]\n [7.61807838e-01 9.07393130e-01 5.33134528e-01 8.67756094e-05\n  7.31730346e-01 4.15022218e-01 1.37897863e-01 5.52395085e-01\n  7.49850165e-01 1.91925783e-01]\n [8.63019742e-01 4.02938614e-01 9.90363069e-01 1.27555645e-01\n  1.22611569e-02 7.53383848e-01 6.54979669e-01 6.13389781e-01\n  7.32294920e-01 8.61423588e-01]\n [3.88772415e-01 6.40041016e-01 2.46353040e-01 5.83960097e-01\n  4.91387834e-01 6.79817651e-01 6.00214122e-01 3.89288376e-01\n  5.77496199e-01 2.28417840e-01]\n [1.87312330e-01 6.09460978e-01 7.51043183e-01 4.62214130e-01\n  4.78136794e-01 4.85233922e-02 4.84597798e-01 1.06979674e-01\n  8.08879120e-02 2.49086546e-02]\n [5.03017602e-01 3.77323398e-01 1.30810240e-01 8.51554856e-03\n  7.00108776e-01 5.43623700e-01 8.21501889e-01 2.03923505e-01\n  9.23829058e-02 9.14605220e-01]\n [9.21980303e-01 9.47227030e-01 4.83557627e-03 1.25986214e-01\n  4.22071979e-01 6.60623977e-01 9.34115498e-01 5.18957372e-01\n  8.46942936e-02 3.38793360e-01]\n [4.08935471e-02 3.09058184e-02 8.36044416e-02 3.73196450e-01\n  2.92153136e-01 8.02739988e-01 3.30637274e-01 5.86621582e-01\n  7.20248789e-01 7.26268131e-01]]\nMinimum and Maximum Values:\n8.677560939929219e-05 0.990363068766235\n","name":"stdout"}]},{"metadata":{"id":"cAgDt6KazHk6"},"cell_type":"markdown","source":"27. a = np.array([1,2,3,2,3,4,3,4,5,6]) b = np.array([7,2,10,2,7,4,9,4,9,8])\n---\nFind the common items between a and b\n"},{"metadata":{"id":"kBXZanxIzs_F","trusted":true},"cell_type":"code","source":"a = np.array([1,2,3,2,3,4,3,4,5,6])\nb = np.array([7,2,10,2,7,4,9,4,9,8])\nnp.intersect1d(a, b)","execution_count":105,"outputs":[{"output_type":"execute_result","execution_count":105,"data":{"text/plain":"array([2, 4])"},"metadata":{}}]},{"metadata":{"id":"lF9IzWOAztpD"},"cell_type":"markdown","source":"28. a = np.array([1,2,3,2,3,4,3,4,5,6])\nb = np.array([7,2,10,2,7,4,9,4,9,8])\n\n---\nFind the positions where elements of a and b match\n\n"},{"metadata":{"id":"JR-mHQLH0HY_","trusted":true},"cell_type":"code","source":"a = np.array([1,2,3,2,3,4,3,4,5,6]) \nb = np.array([7,2,10,2,7,4,9,4,9,8])\nnp.where(np.in1d(a, b))[0]","execution_count":113,"outputs":[{"output_type":"execute_result","execution_count":113,"data":{"text/plain":"array([1, 3, 5, 7])"},"metadata":{}}]},{"metadata":{"id":"mMDiefpH0H1x"},"cell_type":"markdown","source":"29.  names = np.array(['Bob', 'Joe', 'Will', 'Bob', 'Will', 'Joe', 'Joe'])  data = np.random.randn(7, 4)\n\n---\nFind all the values from array **data** where the values from array **names** are not equal to **Will**\n"},{"metadata":{"id":"gfc1Lpf81ZSR","trusted":true},"cell_type":"code","source":"names = np.array(['Bob', 'Joe', 'Will', 'Bob', 'Will', 'Joe', 'Joe'])\ndata = np.random.randn(7, 4)\ndata[names != 'Will']","execution_count":117,"outputs":[{"output_type":"execute_result","execution_count":117,"data":{"text/plain":"array([[-3.00284851,  1.16597497, -0.27821497, -1.07906184],\n       [ 0.37604903, -0.46886979, -0.28293145,  0.40594995],\n       [-0.75640099, -1.06868824, -1.3006146 , -0.63588195],\n       [-0.55305192, -0.65056575,  0.37819044,  0.77846872],\n       [-1.18654757,  0.17979306,  0.36162834, -0.63819092]])"},"metadata":{}}]},{"metadata":{"id":"52zEjDMf1aXS"},"cell_type":"markdown","source":"30. names = np.array(['Bob', 'Joe', 'Will', 'Bob', 'Will', 'Joe', 'Joe']) data = np.random.randn(7, 4)\n\n---\nFind all the values from array **data** where the values from array **names** are not equal to **Will** and **Joe**\n\n"},{"metadata":{"id":"8RYG0kLO1mHw","trusted":true},"cell_type":"code","source":"names = np.array(['Bob', 'Joe', 'Will', 'Bob', 'Will', 'Joe', 'Joe']) \ndata = np.random.randn(7, 4)\na=data[names != 'Will']\na=data[names != 'Joe']\na\n","execution_count":125,"outputs":[{"output_type":"execute_result","execution_count":125,"data":{"text/plain":"array([[-2.2853547 , -0.45623595,  0.74056211,  0.60479375],\n       [ 1.44001189, -0.2881409 , -1.77883367, -0.08404483],\n       [ 0.46699923,  1.88611189,  0.02692015, -1.01416638],\n       [-0.07975146, -1.11681824,  0.2323229 ,  0.58886394]])"},"metadata":{}}]},{"metadata":{"id":"Q7hjf2bd2dCY"},"cell_type":"markdown","source":"Difficulty Level **Hard**"},{"metadata":{"id":"b48g7aRA2jVM"},"cell_type":"markdown","source":"31. Create a 2D array of shape 5x3 to contain decimal numbers between 1 and 15."},{"metadata":{"id":"EbwfSCrW2f9_","trusted":true},"cell_type":"code","source":"arr = np.random.uniform(1,15, size=(5,3))\narr","execution_count":137,"outputs":[{"output_type":"execute_result","execution_count":137,"data":{"text/plain":"array([[ 5.9476326 ,  4.03666783,  7.75121163],\n       [ 7.71484297,  1.06647949, 10.24730259],\n       [10.98319917,  5.81430312, 12.65426151],\n       [ 6.9633883 ,  8.41104628,  4.43306261],\n       [10.72237731,  1.99568904,  8.77152044]])"},"metadata":{}}]},{"metadata":{"id":"Ei_nDHtO3qBk"},"cell_type":"markdown","source":"32. Create an array of shape (2, 2, 4) with decimal numbers between 1 to 16."},{"metadata":{"id":"phOxVpBM4M6D","trusted":true},"cell_type":"code","source":"arr = np.random.uniform(1,16, size=(2,2,4))\narr","execution_count":138,"outputs":[{"output_type":"execute_result","execution_count":138,"data":{"text/plain":"array([[[ 5.34278467,  2.12148946,  2.7202716 ,  7.96485388],\n        [10.59687086,  8.81358771, 15.40464332, 10.39030825]],\n\n       [[ 4.24578258, 14.29431475, 15.75922854,  5.56421522],\n        [13.10416067, 11.9337243 ,  7.37750935, 13.8306591 ]]])"},"metadata":{}}]},{"metadata":{"id":"uyiQaMjA4d_x"},"cell_type":"raw","source":"# 33. Swap axes of the array you created in Question 32"},{"metadata":{"id":"w2m9p8064VtR","trusted":true},"cell_type":"code","source":"np.swapaxes(arr,0,1)","execution_count":139,"outputs":[{"output_type":"execute_result","execution_count":139,"data":{"text/plain":"array([[[ 5.34278467,  2.12148946,  2.7202716 ,  7.96485388],\n        [ 4.24578258, 14.29431475, 15.75922854,  5.56421522]],\n\n       [[10.59687086,  8.81358771, 15.40464332, 10.39030825],\n        [13.10416067, 11.9337243 ,  7.37750935, 13.8306591 ]]])"},"metadata":{}}]},{"metadata":{"id":"2dlU_yUR4mVZ"},"cell_type":"markdown","source":"34. Create an array of size 10, and find the square root of every element in the array, if the values less than 0.5, replace them with 0"},{"metadata":{"id":"tmBabEJ-5JgB","trusted":true},"cell_type":"code","source":"arr = np.random.uniform(1,16, size=(10))\nprint(arr)\narr=np.square(arr)\narr[arr < 0.5] = 0\narr","execution_count":149,"outputs":[{"output_type":"stream","text":"[ 4.35449646  5.71028644  4.30500955 11.51895207  1.19483692  9.33171009\n  4.64533767 10.48706144  8.72736352  4.96799557]\n","name":"stdout"},{"output_type":"execute_result","execution_count":149,"data":{"text/plain":"array([ 18.96163942,  32.60737127,  18.53310721, 132.68625673,\n         1.42763528,  87.08081327,  21.57916206, 109.97845763,\n        76.166874  ,  24.68097998])"},"metadata":{}}]},{"metadata":{"id":"SNAM4dpu5RKA"},"cell_type":"markdown","source":"35. Create two random arrays of range 12 and make an array with the maximum values between each element of the two arrays"},{"metadata":{"id":"3pxebU2b5q9Z","trusted":true},"cell_type":"code","source":"arr1 = np.random.uniform(1,12, size=(10))\narr2 = np.random.uniform(1,12, size=(10))\narr3=np.maximum(arr1,arr2) \narr3","execution_count":152,"outputs":[{"output_type":"execute_result","execution_count":152,"data":{"text/plain":"array([ 3.99430531, 11.52556086, 11.90261062,  7.34436595,  7.99965035,\n        6.02530692,  9.44389057, 11.37466304, 11.77282493, 10.89689442])"},"metadata":{}}]},{"metadata":{"id":"fz_bpqm28qmD"},"cell_type":"markdown","source":"36. names = np.array(['Bob', 'Joe', 'Will', 'Bob', 'Will', 'Joe', 'Joe'])\n\n---\nFind the unique names and sort them out!\n"},{"metadata":{"id":"hiSNMgcY87Ey","trusted":true},"cell_type":"code","source":"names = np.array(['Bob', 'Joe', 'Will', 'Bob', 'Will', 'Joe', 'Joe'])\na=np.unique(names)\na=np.sort(a)\na\n","execution_count":157,"outputs":[{"output_type":"execute_result","execution_count":157,"data":{"text/plain":"array(['Bob', 'Joe', 'Will'], dtype='<U4')"},"metadata":{}}]},{"metadata":{"id":"dguMNzob870H"},"cell_type":"raw","source":"37. a = np.array([1,2,3,4,5])\nb = np.array([5,6,7,8,9])\n\n---\nFrom array a remove all items present in array b\n\n"},{"metadata":{"id":"eCNJXPvK9IAr","trusted":true},"cell_type":"code","source":"a = np.array([1,2,3,4,5])\nb = np.array([5,6,7,8,9])\nb=np.setdiff1d(a, b)\nb","execution_count":167,"outputs":[{"output_type":"execute_result","execution_count":167,"data":{"text/plain":"array([1, 2, 3, 4])"},"metadata":{}}]},{"metadata":{"id":"gz4Dvd4b_Akh"},"cell_type":"markdown","source":"38.  Following is the input NumPy array delete column two and insert following new column in its place.\n\n---\nsampleArray = numpy.array([[34,43,73],[82,22,12],[53,94,66]]) \n\n\n---\n\nnewColumn = numpy.array([[10,10,10]])\n"},{"metadata":{"id":"lLWAJWJJ_I3d","trusted":true},"cell_type":"code","source":"sampleArray = np.array([[34,43,73],[82,22,12],[53,94,66]])\nnewColumn = np.array([[10,10,10]])\nsampleArray[1]=newColumn\nsampleArray","execution_count":172,"outputs":[{"output_type":"execute_result","execution_count":172,"data":{"text/plain":"array([[34, 43, 73],\n       [10, 10, 10],\n       [53, 94, 66]])"},"metadata":{}}]},{"metadata":{"id":"1lIfmbQt_J_W"},"cell_type":"markdown","source":"39. x = np.array([[1., 2., 3.], [4., 5., 6.]]) y = np.array([[6., 23.], [-1, 7], [8, 9]])\n\n\n---\nFind the dot product of the above two matrix\n"},{"metadata":{"id":"fV2-vXcR_vmu","trusted":true},"cell_type":"code","source":"x = np.array([[1., 2., 3.], [4., 5., 6.]])\ny = np.array([[6., 23.], [-1, 7], [8, 9]])\nz=np.dot(x,y)\nz","execution_count":174,"outputs":[{"output_type":"execute_result","execution_count":174,"data":{"text/plain":"array([[ 28.,  64.],\n       [ 67., 181.]])"},"metadata":{}}]},{"metadata":{"id":"5U-4odUw_wP0"},"cell_type":"markdown","source":"40. Generate a matrix of 20 random values and find its cumulative sum"},{"metadata":{"id":"_oOHdiYEAF8N","trusted":true},"cell_type":"code","source":"arr1 = np.random.random(size=(20))\nnp.sum(arr1)","execution_count":180,"outputs":[{"output_type":"execute_result","execution_count":180,"data":{"text/plain":"10.2492236080684"},"metadata":{}}]},{"metadata":{"trusted":true},"cell_type":"code","source":"","execution_count":null,"outputs":[]}],"metadata":{"colab":{"name":"Numpy-Assignment-PIAIC-Batch35-Q2.ipynb","provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.6.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat":4,"nbformat_minor":1}